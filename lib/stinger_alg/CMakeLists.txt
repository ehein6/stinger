set(sources
  adamic_adar/src/adamic_adar.c

  betweenness/src/betweenness.c
  betweenness/src/dynamic_betweenness.cpp

  bfs/src/bfs.c

  clustering/src/clustering.c
  clustering/src/dynamic_clustering.cpp

  kcore/src/kcore.c
  kcore/src/dynamic_kcore.cpp

  pagerank/src/pagerank.c
  pagerank/src/dynamic_pagerank.cpp

  random/src/random.c

  rmat/src/rmat.c

  simple_communities/src/community.c
  simple_communities/src/community-update.c
  simple_communities/src/graph-el.c
  simple_communities/src/sorts.c
  simple_communities/src/dynamic_simple_communities.cpp
  simple_communities/src/dynamic_simple_communities_updating.cpp

  static_components/src/static_components.c
  streaming_connected_components/src/streaming_connected_components.c
  weakly_connected_components/src/weakly_connected_components.c
)
# Don't include all .h files here, just the ones that contain public definitions
set(headers
  adamic_adar/inc/adamic_adar.h
  betweenness/inc/betweenness.h
  betweenness/inc/dynamic_betweenness.h

  bfs/inc/bfs.h

  clustering/inc/clustering.h
  clustering/inc/dynamic_clustering.h

  kcore/inc/kcore.h
  kcore/inc/dynamic_kcore.h

  pagerank/inc/pagerank.h
  pagerank/inc/dynamic_pagerank.h

  random/inc/random.h
  rmat/inc/rmat.h

  simple_communities/inc/community.h
  simple_communities/inc/defs.h
  simple_communities/inc/graph-el.h
  simple_communities/inc/community-update.h
  simple_communities/inc/dynamic_simple_communities.h
  simple_communities/inc/dynamic_simple_communities_updating.h

  static_components/inc/static_components.h
  streaming_connected_components/inc/streaming_connected_components.h
  weakly_connected_components/inc/weakly_connected_components.h

  common/inc/streaming_algorithm.h
)

file(COPY ${headers} DESTINATION "${CMAKE_BINARY_DIR}/include/stinger_alg")

include_directories("${CMAKE_BINARY_DIR}/include/stinger_alg")
include_directories("${CMAKE_BINARY_DIR}/include/stinger_core")
include_directories("${CMAKE_BINARY_DIR}/include/stinger_net")
include_directories("${CMAKE_BINARY_DIR}/include/stinger_utils")

set_source_files_properties(${config} PROPERTIES GENERATED TRUE)
add_library(stinger_alg SHARED ${sources} ${headers} ${config})
target_link_libraries(stinger_alg stinger_core stinger_net stinger_utils compat)
#target_include_directories(stinger_alg PRIVATE simple_communities/inc)
